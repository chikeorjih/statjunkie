{"version":3,"sources":["components/ranking/RankChart.js","pages/Home.js","components/ranking/RankStat.js","components/DropDown.js","helpers/teamIds.js","components/Image.js","components/TeamDetails.js","helpers/mappers.js","components/SkaterView.js","components/GoalieView.js","components/Toggle.js","helpers/api.js","components/PlayerModal.js","pages/Team.js","App.js","serviceWorker.js","index.js"],"names":["RankChart","Component","props","rank","ranking","slice","fillPercent","toFixed","fill","style","width","concat","height","background","react_default","a","createElement","className","label","RankStat","stat","DropDown","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","toggleDropdown","updateTeam","e","teamId","currentTarget","dataset","teamid","teamList","list","map","team","index","key","data-teamid","id","onClick","name","caretCss","listCss","labelCss","undefined","length","teams","Image","loaded","setLoaded","imgClass","cssName","onLoad","alt","src","url","player","type","TeamDetails","_this","this","TeamContext","Consumer","context","state","teamInfo","teamStats","stats","loadedCss","isLoading","components_Image","city","components_DropDown","teamName","TeamIds","pts","wins","losses","ot","ranking_RankChart","ranks","goalsPerGame","goalsAgainstPerGame","powerPlayPercentage","penaltyKillPercentage","ranking_RankStat","faceOffWinPercentage","evGGARatio","shootingPctRank","shootingPctg","savePctRank","savePctg","getCurrentPlayerStats","person","details","splits","filter","year","season","currentSeason","parseInt","currentTeam","league","games","goals","assists","points","plusMinus","getCareerAverages","totalStats","trailingStats","actuals","i","len","assign","x","Math","max","y","push","careerAverages","getAverage","trailingCareerAverages","standardDeviation","totals","averages","meanSquared","pow","round","sqrt","getStandardDeviation","getGoalieCareerAverages","trailingYears","saveP","gaa","savePercentage","goalAgainstAverage","getProjection","mappers","getTeaminfo","data","locationName","venue","division","conference","getPlayerDetails","getGoalies","players","franchise","roster","fullName","currentStats","careerStats","position","code","primaryPosition","getSummary","isGoalies","picture","gp","w","l","so","shutouts","svP","sa","shotsAgainst","pkSv","shortHandedSavePercentage","projections","getSkaters","SkaterView","playerId","playerid","showPlayerModal","Mappers","performanceFormater","avg","careerAvg","cell","stDev","headerSortingClasses","column","sortOrder","isLastSorting","colIndex","columns","dataField","text","formatter","row","sort","data-playerid","bind","lib_default","keyField","defaultSorted","order","GoalieView","goalies","isOver","svPerformanceFormater","gaaPerformanceFormater","Toggle","updatePlayers","showGoalies","styles","isGoalie","api","callApi","_callApi","asyncToGenerator","regenerator_default","mark","_callee","param","response","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","_x2","apply","arguments","PlayerModal","showModal","activePlayer","React","createContext","TEAM_API","Team","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","error","teamData","playerData","playerModal","fetchTeamDetails","newTeam","_this2","setState","toString","navigate","playerDetails","skater","_this3","TEAM_INFO","TEAM_SUMMARY","currentDetails","Api","then","catch","components_GoalieView","components_SkaterView","components_PlayerModal","updateModal","Provider","value","components_TeamDetails","components_Toggle","routes","/","Team_Team","/statjunkie","/team","/team/:id","_ref","App","useRoutes","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.69faef66.chunk.js","sourcesContent":["import React from 'react';\n\nconst RankChart = (props) => {\n    const rank = props.ranking && props.ranking.slice(0,-2);\n    const fillPercent = 100 - ((((rank-1)/31).toFixed(2))*100);\n    const fill = (rank > 0 && rank < 11) ? '#80c762' : (rank > 10 && rank < 20) ? '#ecc05b' : '#ec1c1c';\n    const style = {\n        width: `${fillPercent}%`,\n        height: '100%',\n        background: fill\n    };\n\n    return (\n        <div className=\"rank-chart\">\n            <div className=\"label\">{props.label}</div>\n            <div  className=\"chart\">\n                <span className=\"fill\" style={style}></span>\n                <span className=\"rank-tag\">{props.ranking}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default RankChart;\n","import React, { Component } from 'react';\n\nclass Home extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        data: null,\n      };\n    }\n\n    render() {\n        return (\n            <div className=\"home\">\n            Home\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\n\nconst RankStat = (props) => {\n    const rank = props.ranking && props.ranking.slice(0,-2);\n    const fill = (rank > 0 && rank < 11) ? '#80c762' : (rank > 10 && rank < 20) ? '#ecc05b' : '#ec1c1c';\n    const style = { background: fill };\n    return (\n        <div className=\"rank-stat\">\n            <div className=\"label\">{props.label}</div>\n            <div className=\"stat\">\n                <span>{props.ranking}</span>\n                <span style={style}>{props.stat}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default RankStat;\n","import React, { useState } from 'react';\n\nconst DropDown = (props) => {\n    //state\n    const [isOpen, setIsOpen] = useState(false);\n    const toggleDropdown = () => {\n        (isOpen === true) ? setIsOpen(false) : setIsOpen(true);\n    };\n\n    const updateTeam = (e) => {\n        const teamId = e.currentTarget.dataset.teamid;\n        props.updateTeam(teamId);\n    };\n\n\n    const teamList = props.list.map((team,index) => (\n        <li key={index} data-teamid={team.id} onClick={updateTeam}>{team.name}</li>\n    ));\n\n    let caretCss = (isOpen) ? 'caret open' : 'caret closed';\n    let listCss = (isOpen) ? 'dropdown-list open' : 'dropdown-list closed';\n    let labelCss =(props.label !== undefined && props.label.length < 8) ? 'label' : 'label large';\n\n    return (\n        <div className=\"dropdown\" onClick={toggleDropdown}>\n            <span className={labelCss}>{props.label}</span>\n            <span className={caretCss}></span>\n            <ul className={listCss}>\n                <li className=\"close\"><button onClick={toggleDropdown}>Close</button></li>\n                {teamList}\n            </ul>\n        </div>\n    );\n}\n\nexport default DropDown;\n","const teams = [\n    {name: 'Anaheim Ducks', id: 24},\n    {name: 'Arizona Coyotes', id: 53},\n    {name: 'Boston Bruins', id: 6},\n    {name: 'Buffalo Sabres', id: 7},\n    {name: 'Calgary Flames', id: 20},\n    {name: 'Carolina Hurricanes', id: 12},\n    {name: 'Chicago Blackhawks', id: 16},\n    {name: 'Colorado Avalanche', id: 21},\n    {name: 'Columbus Blue Jackets', id: 29},\n    {name: 'Dallas Stars', id: 25},\n    {name: 'Detroit Red Wings', id: 17},\n    {name: 'Edmonton Oilers', id: 22},\n    {name: 'Florida Panthers', id: 13},\n    {name: 'Los Angeles Kings', id: 26},\n    {name: 'Minnesota Wild', id: 30},\n    {name: 'Montreal Canadiens', id: 8},\n    {name: 'Nashville Predators', id: 18},\n    {name: 'New Jersey Devils', id: 1},\n    {name: 'New York Islanders', id: 2},\n    {name: 'New York Rangers', id: 3},\n    {name: 'Ottawa Senators', id: 9},\n    {name: 'Philadelphia Flyers', id: 4},\n    {name: 'Pittsburgh Penguins', id: 5},\n    {name: 'San Jose Sharks', id: 28},\n    {name: 'St. Louis Blues', id: 19},\n    {name: 'Tampa Bay Lightning', id: 14},\n    {name: 'Toronto Maple Leafs', id: 10},\n    {name: 'Vancouver Canucks', id: 23},\n    {name: 'Vegas Golden Knights', id: 54},\n    {name: 'Washington Capitals', id: 15},\n    {name: 'Winnipeg Jets', id: 52}\n];\n\nexport default teams;","import React, { useState } from 'react';\n\nconst Image = (props) => {\n    const [loaded, setLoaded] = useState(false);\n    const doneLoading = () => {\n        setLoaded(true);\n    }\n    let imgClass = (loaded) ? `${props.cssName} loaded` : props.cssName;\n\n    return (\n        <img className={imgClass} onLoad={doneLoading} alt=\"player\" src={`${props.url}${props.player}.${props.type}`}/>\n    );\n}\n\nexport default Image;\n","import React, { Component } from 'react';\nimport RankChart from '../components/ranking/RankChart';\nimport RankStat from '../components/ranking/RankStat';\nimport DropDown from '../components/DropDown';\nimport TeamIds from '../helpers/teamIds';\nimport {TeamContext} from '../pages/Team';\nimport Image from './Image';\n\nconst TEAMLOGO = 'https://www-league.nhlstatic.com/images/logos/teams-current-primary-dark/';\n\nclass TeamDetails extends Component {\n\n  render() {\n    return (\n        <TeamContext.Consumer>\n            {(context) => {\n                const team = context.state.teamInfo;\n                const teamStats = team.stats;\n                let loadedCss = (context.state.isLoading) ? 'loading' : 'loaded';\n\n                return (\n                    <div className={`team-info ${loadedCss}`}>\n                        <div className=\"team-details\">\n                        <div className=\"details\">\n                            <Image cssName={'logo'} url={TEAMLOGO} player={this.props.teamId} type='svg'/>\n                            <div className=\"team-name\">\n                                    <span>{team.city}</span>\n                                    <span className=\"name\">\n                                        <DropDown label={team.teamName} list={TeamIds} updateTeam={context.updateTeam}/> \n                                    </span>\n                                    <div className=\"record\">\n                                        <span>{teamStats.pts} pts</span>\n                                        <span>{teamStats.wins}-{teamStats.losses}-{teamStats.ot}</span>\n                                    </div>\n                            </div>\n                            </div>\n                            <div className=\"rankings\">\n                                <RankChart label=\"Goals For\" ranking={team.ranks.goalsPerGame} />\n                                <RankChart label=\"Goals Against\" ranking={team.ranks.goalsAgainstPerGame} />\n                                <RankChart label=\"Powerplay\" ranking={team.ranks.powerPlayPercentage} />\n                                <RankChart label=\"Penalty Kill\" ranking={team.ranks.penaltyKillPercentage} />\n                            </div>\n                            <div className=\"rankings row\">\n                                <RankStat label=\"FaceOffs\" ranking={team.ranks.faceOffWinPercentage} stat={`${team.stats.faceOffWinPercentage}%`} />\n                                <RankStat label=\"Possession\" ranking={team.ranks.evGGARatio} stat={`${team.stats.evGGARatio}`} />\n                                <RankStat label=\"Shooting %\" ranking={team.ranks.shootingPctRank} stat={`${team.stats.shootingPctg}%`} />\n                                <RankStat label=\"Save %\" ranking={team.ranks.savePctRank} stat={`${team.stats.savePctg}%`} />\n                            </div>\n                        </div>\n                    </div>\n                )\n            }}\n        </TeamContext.Consumer>\n    );\n  }\n}\n\nexport default TeamDetails;\n","const mappers = {\n    getTeaminfo: (data) => {\n        return (\n            {\n                city: data.teams[0].locationName,\n                teamName: data.teams[0].teamName,\n                venue: data.teams[0].venue.name,\n                division: data.teams[0].division,\n                conference: data.teams[0].conference,\n                stats: data.teams[0].teamStats[0].splits[0].stat,\n                ranks: data.teams[0].teamStats[0].splits[1].stat,\n            }\n        );\n    },\n    getPlayerDetails: (data, details, getGoalies) => {\n        let players = [];\n        const rawPlayers = data.teams[0].franchise.roster.roster;\n\n        players = rawPlayers.map(player => {\n            return (\n                {\n                    name: player.person.fullName,\n                    details: player.person,\n                    currentStats:  getCurrentPlayerStats(player.person, details),\n                    careerStats: (player.position.code === 'G') ? getGoalieCareerAverages(player.person) : getCareerAverages(player.person)\n                }\n            );\n        });\n\n        if(getGoalies){\n            return players.filter(player => player.details.primaryPosition.code === 'G');\n        }else{\n            return players.filter(player => player.details.primaryPosition.code !== 'G');\n        }\n        \n    },\n    getSummary: (players, isGoalies) => {\n        return (isGoalies) ? getGoalies(players) : getSkaters(players);\n    }\n}\n\nfunction getSkaters(players) {\n    return players.map(player => {\n        return (\n            {\n                picture: player.details.id,\n                name: {name: player.name, id: player.details.id},\n                position: player.details.primaryPosition.code,\n                gp: player.currentStats.games,\n                goals: player.currentStats.goals,\n                assists: player.currentStats.assists,\n                points: player.currentStats.points,\n                plusMinus: player.currentStats.plusMinus,\n                projections: {\n                    goals: getProjection(player.currentStats.goals,player.currentStats.games),\n                    assists: getProjection(player.currentStats.assists,player.currentStats.games),\n                    points: getProjection(player.currentStats.points,player.currentStats.games)\n                },\n                averages: {\n                    goals: getAverage(player.currentStats.goals,player.currentStats.games),\n                    assists: getAverage(player.currentStats.assists,player.currentStats.games),\n                    points: getAverage(player.currentStats.points,player.currentStats.games)\n                },\n                careerAverages: {\n                    goals: player.careerStats.careerAverages.goals,\n                    assists: player.careerStats.careerAverages.assists,\n                    points: player.careerStats.careerAverages.points\n                },\n                trailingCareerAverages: {\n                    goals: player.careerStats.trailingCareerAverages.goals,\n                    assists: player.careerStats.trailingCareerAverages.assists,\n                    points: player.careerStats.trailingCareerAverages.points\n                },\n                standardDeviation: {\n                    goals: player.careerStats.standardDeviation.goals,\n                    assists: player.careerStats.standardDeviation.assists,\n                    points: player.careerStats.standardDeviation.points\n                }\n            }\n        );\n    });\n}\n\nfunction getGoalies(players) {\n    return players.map(player => {\n        return (\n            {\n                picture: player.details.id,\n                name: player.name,\n                position: player.details.primaryPosition.code,\n                gp: player.currentStats.games,\n                w: player.currentStats.wins,\n                l: player.currentStats.losses,\n                so: player.currentStats.shutouts,\n                gaa: player.currentStats.goalAgainstAverage,\n                svP:  player.currentStats.savePercentage,\n                sa: player.currentStats.shotsAgainst,\n                pkSv: Math.round((player.currentStats.shortHandedSavePercentage)*10)/1000,\n                trailingCareerAverages: {\n                    saveP: player.careerStats.trailingCareerAverages.saveP,\n                    gaa: player.careerStats.trailingCareerAverages.gaa\n                }\n            }\n        );\n    });\n}\n\nfunction getCurrentPlayerStats(person, details) {\n    const currentStatsDefault = {games: 0, goals: 0, assists: 0, points: 0, plusMinus: 0,};\n    const stats = person.stats[0].splits.filter((year) => {\n        return (\n            year.season === details.currentSeason && \n            year.team.id === parseInt(details.currentTeam) && \n            year.league.id === 133 //133 = NHL\n        );\n    });\n\n    return (stats[0] !== undefined) ? stats[0].stat : currentStatsDefault;\n}\n\nfunction getCareerAverages(person) {\n    const stats = person.stats[0].splits.filter((year) => {\n        return (\n            year.league.id === 133\n        );\n    });\n    let totalStats = {games: 0, goals: 0, assists: 0, points: 0 };\n    let trailingStats = {games: 0, goals: 0, assists: 0, points: 0, actuals: []};\n\n    // TODO: fast but there is a better way to do this\n    for (let i = 0, len = stats.length; i < len; i++) {\n        Object.assign(totalStats,{\n            games: totalStats.games + stats[i].stat.games,\n            goals: totalStats.goals + stats[i].stat.goals,\n            assists: totalStats.assists + stats[i].stat.assists,\n            points: totalStats.points + stats[i].stat.points\n        });\n    }\n    for (let x = Math.max((stats.length-4),0), y = stats.length - 1; x < y; x++) {\n        Object.assign(trailingStats,{\n            games: trailingStats.games + stats[x].stat.games,\n            goals: trailingStats.goals + stats[x].stat.goals,\n            assists: trailingStats.assists + stats[x].stat.assists,\n            points: trailingStats.points + stats[x].stat.points\n        });\n\n        trailingStats.actuals.push({\n            games: stats[x].stat.games,\n            goals: stats[x].stat.goals,\n            assists: stats[x].stat.assists,\n            points: stats[x].stat.points\n        });\n    }\n\n    let careerAverages = {\n        goals: getAverage(totalStats.goals,totalStats.games), \n        assists: getAverage(totalStats.assists,totalStats.games), \n        points: getAverage(totalStats.points,totalStats.games)\n    };\n\n    let trailingCareerAverages = {\n        goals: getAverage(trailingStats.goals,trailingStats.games), \n        assists: getAverage(trailingStats.assists,trailingStats.games), \n        points: getAverage(trailingStats.points,trailingStats.games)\n    };\n    let standardDeviation = getStandardDeviation(trailingStats,trailingCareerAverages);\n\n    return {totalStats, careerAverages, trailingCareerAverages, standardDeviation};\n}\n\nfunction getGoalieCareerAverages(person) {\n    const stats = person.stats[0].splits.filter((year) => {\n        return (\n            year.league.id === 133 && year.stat.games > 10\n        );\n    });\n    const trailingYears = (stats.length-1 > 3) ? 4 : stats.length;\n\n    let totalStats = {games:0, saveP: 0, gaa:0};\n    let trailingStats = {games:0, saveP: 0, gaa:0};\n\n    for (let i = 0, len = stats.length; i < len; i++) {\n        Object.assign(totalStats,{\n            games: totalStats.games + stats[i].stat.games,\n            saveP: totalStats.saveP + stats[i].stat.savePercentage,\n            gaa: totalStats.gaa + stats[i].stat.goalAgainstAverage\n        });\n    }\n    for (let x = Math.max((stats.length-1)-3,0), y = stats.length; x < y; x++) {\n        Object.assign(trailingStats,{\n            games: trailingStats.games + stats[x].stat.games,\n            saveP: trailingStats.saveP + stats[x].stat.savePercentage,\n            gaa: trailingStats.gaa + stats[x].stat.goalAgainstAverage\n        });\n    }\n    let trailingCareerAverages = {\n        saveP: Math.round((trailingStats.saveP/trailingYears)*1000)/1000, \n        gaa: Math.round((trailingStats.gaa/trailingYears)*1000)/1000\n    };\n    return {totalStats, trailingCareerAverages};\n}\n\nfunction getStandardDeviation(totals,averages){\n    let standardDeviation = {games:0, goals:0, assists: 0, points:0};\n    const meanSquared = totals.actuals.map((year) => {\n        return ({\n            games: year.games,\n            goals: Math.pow((getAverage(year.goals,year.games) - averages.goals),2),\n            assists: Math.pow((getAverage(year.assists,year.games)  - averages.assists),2),\n            points: Math.pow((getAverage(year.points,year.games)  - averages.points),2)\n        });\n    });\n    for (let i = 0, len = meanSquared.length; i < len; i++) {\n        Object.assign(standardDeviation,{\n            games: Math.round(Math.sqrt((standardDeviation.games + meanSquared[i].games)/meanSquared.length)*100)/100,\n            goals: Math.round(Math.sqrt((standardDeviation.goals + meanSquared[i].goals)/meanSquared.length)*100)/100,\n            assists: Math.round(Math.sqrt((standardDeviation.assists + meanSquared[i].assists)/meanSquared.length)*100)/100,\n            points: Math.round(Math.sqrt((standardDeviation.points + meanSquared[i].points)/meanSquared.length)*100)/100\n        });\n    }\n    return standardDeviation;\n}\n\nfunction getAverage(stat,games) {\n    //this check handles a werid case where they track players that didnt play in a regular season game\n    const Avg = (stat !== 0 && games !== 0) ? Math.round((stat/games)*100)/100 : 0;\n    return Avg;\n}\n\nfunction getProjection(stat,games) {\n    stat = (stat !== undefined) ? stat : 0;\n\n    //this check handles a werid case where they track players that didnt play in a regular season game\n    return (stat !== 0 && games !== 0) ? Math.round((stat/games) * 82) : 0;\n}\n\nexport default mappers;","import React, { Component } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport {TeamContext} from '../pages/Team';\nimport Mappers from '../helpers/mappers';\nimport Image from './Image';\n\nconst PLAYERIMAGE = 'https://nhl.bamcontent.com/images/headshots/current/60x60/';\n\nclass SkaterView extends Component {\n\n  showPlayerModal(e) {\n    const playerId = e.currentTarget.dataset.playerid;\n    this.props.showPlayerModal(playerId);\n  }\n\n  render() {\n    return (\n      <TeamContext.Consumer>\n        {(context) => {\n          const players = Mappers.getSummary(context.state.players, false);\n\n          const avatarFormater = (cell,row) => {\n              return (\n                  <Image cssName={'player'} url={PLAYERIMAGE} player={cell} type='jpg'/>\n              );\n          };\n          const playerFormater = (cell,row) => {\n            return (\n                <button className=\"player-name\" data-playerid={cell.id} onClick={this.showPlayerModal.bind(this)}>{cell.name}</button>\n            );\n        };\n          const performanceFormater = (avg,careerAvg,cell,stDev) => {\n            //TODO consider sing the Standard deviation thats being passed in\n            const buffer = .0244; //give them a 2pt/g/a buffer\n            let style = '';\n\n            if(avg <= (careerAvg - buffer)){\n              style = 'poor'\n            }else if (avg >= (careerAvg + buffer)) {\n              style = 'good'\n            }\n            return <span className={style}>{cell}</span>\n          };\n          const goalsPerformanceFormater = (cell,row) => performanceFormater(row.averages.goals,row.trailingCareerAverages.goals,cell,row.standardDeviation.goals);\n          const astsPerformanceFormater = (cell,row) => performanceFormater(row.averages.assists,row.trailingCareerAverages.assists,cell,row.standardDeviation.assists);\n          const ptsPerformanceFormater = (cell,row) => performanceFormater(row.averages.points,row.trailingCareerAverages.points,cell,row.standardDeviation.points);\n          const defaultSorted = [{\n            dataField: 'points',\n            order: 'desc'\n          }];\n          const headerSortingClasses = (column, sortOrder, isLastSorting, colIndex) => (\n            sortOrder === 'asc' ? 'sort-asc' : 'sort-desc'\n          );\n            \n      \n          const columns = [\n              { dataField: 'picture', text: '', formatter: avatarFormater }, \n              { dataField: 'name', text: 'Player', sort: true, headerSortingClasses, formatter: playerFormater },\n              { dataField: 'position', text: 'Pos', sort: true, headerSortingClasses },\n              { dataField: 'gp', text: 'GP', sort: true, headerSortingClasses },\n              { dataField: 'goals', text: 'G', sort: true, headerSortingClasses, formatter: goalsPerformanceFormater },\n              { dataField: 'assists', text: 'A', sort: true, headerSortingClasses, formatter: astsPerformanceFormater },\n              { dataField: 'points', text: 'Pts', sort: true, headerSortingClasses, formatter: ptsPerformanceFormater },\n              { dataField: 'plusMinus', text: '+/-', sort: true, headerSortingClasses },\n              { dataField: 'projections.goals', text: 'Pj.G', sort: true, headerSortingClasses },\n              { dataField: 'projections.assists', text: 'Pj.A', sort: true, headerSortingClasses },\n              { dataField: 'projections.points', text: 'Pj.Pts', sort: true, headerSortingClasses },\n              { dataField: 'averages.points', text: 'Pts/G.',sort: true, headerSortingClasses },\n              { dataField: 'careerAverages.points', text: 'Career',sort: true, headerSortingClasses }\n          ];\n          \n          return (\n            <div className=\"team-content\">\n                <div className='roster-stats'>\n                    <BootstrapTable keyField='picture' data={ players } columns={ columns } defaultSorted={ defaultSorted }/>\n                    <div className=\"legend\">\n                      <div><span className=\"good\"></span> Outperforming recent pace (last 3 years)</div>\n                      <div><span className=\"poor\"></span> Underperforming recent pace (last 3 years)</div>\n                    </div>\n                </div>\n            </div>\n          )\n        }}\n      </TeamContext.Consumer>\n    );\n  }\n}\n\nexport default SkaterView;\n","import React, { Component } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport {TeamContext} from '../pages/Team';\nimport Mappers from '../helpers/mappers';\nimport Image from './Image';\n\nconst PLAYERIMAGE = 'https://nhl.bamcontent.com/images/headshots/current/60x60/';\n\nclass GoalieView extends Component {\n\n  render() {\n    return (\n      <TeamContext.Consumer>\n        {(context) => {\n          const players = Mappers.getSummary(context.state.goalies, true);\n          const avatarFormater = (cell,row) => {\n              return (\n                <Image cssName={'player'} url={PLAYERIMAGE} player={cell} type='jpg'/>\n              );\n          };\n          const gaaPerformanceFormater = (avg,careerAvg,cell,isOver) => {\n            const buffer = .1;\n            let style = '';\n            if(avg < (careerAvg - buffer)){\n              style = 'good'\n            }else if (avg > (careerAvg + buffer)) {\n              style = 'poor'\n            }\n            return <span className={style}>{cell}</span>;\n          };\n          const svPerformanceFormater = (avg,careerAvg,cell,isOver) => {\n            const buffer = .01;\n            let style = '';\n            if(avg > (careerAvg + buffer)){\n              style = 'good'\n            }else if (avg < (careerAvg - buffer)) {\n              style = 'poor'\n            }\n            return <span className={style}>{cell}</span>;\n          };\n          const gaaFormater = (cell,row) => gaaPerformanceFormater(row.gaa,row.trailingCareerAverages.gaa,cell);\n          const svFormater = (cell,row) => svPerformanceFormater(row.svP,row.trailingCareerAverages.saveP,cell);\n          const defaultSorted = [{\n              dataField: 'gp',\n              order: 'desc'\n            }];\n            const headerSortingClasses = (column, sortOrder, isLastSorting, colIndex) => (\n              sortOrder === 'asc' ? 'sort-asc' : 'sort-desc'\n            );\n            \n      \n          const columns = [\n              { dataField: 'picture', text: '', formatter: avatarFormater }, \n              { dataField: 'name', text: 'Player', sort: true, headerSortingClasses },\n              { dataField: 'position', text: 'Pos', sort: true, headerSortingClasses },\n              { dataField: 'gp', text: 'GP', sort: true, headerSortingClasses },\n              { dataField: 'w', text: 'W', sort: true, headerSortingClasses },\n              { dataField: 'l', text: 'L', sort: true, headerSortingClasses },\n              { dataField: 'so', text: 'SO', sort: true, headerSortingClasses },\n              { dataField: 'svP', text: 'SV%', sort: true, headerSortingClasses, formatter: svFormater },\n              { dataField: 'gaa', text: 'GAA', sort: true, headerSortingClasses, formatter: gaaFormater },\n              { dataField: 'sa', text: 'SA', sort: true, headerSortingClasses },\n              { dataField: 'pkSv', text: 'PKSV%', sort: true, headerSortingClasses }\n          ];\n          \n          return (\n            <div className=\"team-content\">\n                <div className='roster-stats goalie'>\n                    <BootstrapTable keyField='picture' data={ players } columns={ columns } defaultSorted={ defaultSorted }/>\n                    <div className=\"legend\">\n                      <div><span className=\"good\"></span> Outperforming recent pace (last 3 years)</div>\n                      <div><span className=\"poor\"></span> Underperforming recent pace (last 3 years)</div>\n                    </div>\n                </div>\n            </div>\n          )\n        }}\n      </TeamContext.Consumer>\n    );\n  }\n}\n\nexport default GoalieView;\n","import React from 'react';\nimport {TeamContext} from '../pages/Team';\n\nconst Toggle = (props) => {\n    const updatePlayers = (showGoalies) => {\n        props.updatePlayers(showGoalies);\n    };\n\n    return (\n        <TeamContext.Consumer>\n            {(context) => {\n                const showGoalies = context.state.showGoalies;\n                const styles = (isGoalie) => {\n                    return (showGoalies === isGoalie) ? 'active' : '';\n                };\n\n                return (\n                    <div className=\"players-toggle\">\n                        <div className=\"toggle\">\n                            <button className={styles(false)} onClick={updatePlayers.bind(this,false)}>Skaters</button>\n                            <button className={styles(true)} onClick={updatePlayers.bind(this,true)}>Goalies</button>\n                        </div>\n                    </div>\n                );\n            }}\n        </TeamContext.Consumer>\n    );\n}\n\nexport default Toggle;\n","const api = {\n    callApi: async function(api,param) {\n        let response = await fetch(api + param);\n        return await response.json();\n    }\n}\n\nexport default api;","import React, { Component } from 'react';\nimport {TeamContext} from '../pages/Team';\n\nclass PlayerModal extends Component {\n\n  render() {\n    return (\n        <TeamContext.Consumer>\n        {(context) => {\n            const closeModal = () => {\n                this.props.showModal(false);\n            };\n\n            return (\n                <div className=\"modal\">\n                    <div className=\"modal-bkg\" onClick={closeModal}></div>\n                    <div className=\"modal-content\">\n                        {this.props.activePlayer.details.fullName}\n                    </div>\n                </div>\n            )\n        }}\n        </TeamContext.Consumer>\n    )\n  }\n\n}\n\nexport default PlayerModal;","import React, { Component } from 'react';\nimport TeamDetails from '../components/TeamDetails';\nimport SkaterView from '../components/SkaterView';\nimport GoalieView from '../components/GoalieView';\nimport Toggle from '../components/Toggle';\nimport Api from '../helpers/api';\nimport Mappers from '../helpers/mappers';\nimport {navigate} from 'hookrouter';\nimport PlayerModal from '../components/PlayerModal';\n\nconst TeamContext = React.createContext(null);\nconst TEAM_API = 'https://statsapi.web.nhl.com/api/v1/teams/';\n\nclass Team extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      error: null,\n      currentTeam: (this.props.currentTeam === undefined) ? '19' : this.props.currentTeam,\n      currentSeason: '20192020',\n      teamData:null,\n      playerData:null,\n      players: [],\n      goalies: [],\n      teamInfo: {\n          stats: {},\n          ranks: { ranking: {} }\n      },\n      showGoalies: false,\n      playerModal: {\n        isOpen: false,\n        activePlayer: {}\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.fetchTeamDetails();\n  }\n\n  updateTeam(newTeam) {\n    this.setState({currentTeam: newTeam.toString()}, ()=> {\n      navigate(`/team/${newTeam}`);\n      this.fetchTeamDetails();\n    });\n  }\n\n  updatePlayers(showGoalies) {\n    this.setState({showGoalies: showGoalies});\n  }\n\n  showPlayerModal(player) {\n    const playerDetails = this.state.players.filter(skater => skater.details.id.toString() === player.toString())[0];\n    this.setState({\n      playerModal: {\n        isOpen: true,\n        activePlayer: playerDetails\n      }\n    });\n  }\n\n  updateModal(isOpen) {\n    this.setState({\n      playerModal: {\n        isOpen,\n        activePlayer:{}\n      }\n    });\n  }\n\n  fetchTeamDetails() {\n    const TEAM_INFO = `${this.state.currentTeam}?expand=team.stats`;\n    const TEAM_SUMMARY = `${this.state.currentTeam}?hydrate=franchise(roster(season=${this.state.currentSeason},person(name,stats(splits=[yearByYear]))))`;\n    const currentDetails = {\n      currentTeam: this.state.currentTeam, \n      currentSeason: this.state.currentSeason\n    };\n    \n    this.setState({isLoading: true});\n\n    Api.callApi(TEAM_API,TEAM_INFO)\n      .then(data => this.setState({ teamData: data, teamInfo: Mappers.getTeaminfo(data), isLoading: false}))\n      .catch(error => this.setState({error, isLoading: false}));\n\n    Api.callApi(TEAM_API,TEAM_SUMMARY)\n      .then(data => this.setState({ \n        playerData: data, \n        players: Mappers.getPlayerDetails(data,currentDetails,false),\n        goalies: Mappers.getPlayerDetails(data,currentDetails,true),\n        isLoading: false }))\n      .catch(error => this.setState({error, isLoading: false}))\n  }\n\n  render() {\n      const players = (this.state.showGoalies) ? \n        <GoalieView teamId={this.state.currentTeam} /> : \n        <SkaterView teamId={this.state.currentTeam} showPlayerModal={this.showPlayerModal.bind(this)}/>;\n\n      const playerModal = (this.state.playerModal.isOpen) && <PlayerModal showModal={this.updateModal.bind(this)} activePlayer={this.state.playerModal.activePlayer}/>\n\n      return (\n        <TeamContext.Provider value={{state: this.state,updateTeam: this.updateTeam.bind(this)}}>\n            <div className=\"team\">\n              <TeamDetails teamId={this.state.currentTeam} />\n              <Toggle updatePlayers={this.updatePlayers.bind(this)}/>\n              {players}\n              {playerModal}\n            </div>\n        </TeamContext.Provider>\n      );\n  }\n}\n\nexport {Team, TeamContext};\n","import React from 'react';\nimport Home from './pages/Home';\nimport {Team} from './pages/Team';\nimport {useRoutes} from 'hookrouter';\n\nconst routes = {\n  '/': () => <Team />,\n  '/statjunkie': () => <Team />,\n  '/team': () => <Team />,\n  '/team/:id': ({id}) => <Team currentTeam={id}/>,\n};\n\nconst App = () => {\n  return useRoutes(routes);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}