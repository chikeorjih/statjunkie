{"version":3,"sources":["components/ranking/RankChart.js","components/ranking/RankStat.js","components/DropDown.js","helpers/teamIds.js","components/Image.js","components/TeamDetails.js","helpers/mappers.js","components/SkaterView.js","components/GoalieView.js","components/Toggle.js","helpers/api.js","components/PlayerModal.js","pages/Team.js","App.js","serviceWorker.js","index.js"],"names":["RankChart","props","rank","ranking","slice","fillPercent","toFixed","fill","style","width","concat","height","background","react_default","a","createElement","className","label","RankStat","stat","DropDown","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","toggleDropdown","updateTeam","e","teamId","currentTarget","dataset","teamid","teamList","list","map","team","index","key","data-teamid","id","onClick","name","caretCss","listCss","labelCss","undefined","length","teams","Image","loaded","setLoaded","imgClass","cssName","onLoad","alt","src","url","player","type","TeamDetails","_this","this","TeamContext","Consumer","context","state","teamInfo","teamStats","stats","loadedCss","isLoading","components_Image","city","components_DropDown","teamName","TeamIds","pts","wins","losses","ot","ranking_RankChart","ranks","goalsPerGame","goalsAgainstPerGame","powerPlayPercentage","penaltyKillPercentage","ranking_RankStat","faceOffWinPercentage","evGGARatio","shootingPctRank","shootingPctg","savePctRank","savePctg","Component","getCurrentPlayerStats","person","details","splits","filter","year","season","currentSeason","parseInt","currentTeam","league","games","goals","assists","points","plusMinus","getCareerAverages","totalStats","trailingStats","actuals","i","len","assign","x","Math","max","y","push","careerAverages","getAverage","trailingCareerAverages","standardDeviation","totals","averages","meanSquared","pow","round","sqrt","getStandardDeviation","getGoalieCareerAverages","trailingYears","saveP","gaa","savePercentage","goalAgainstAverage","getProjection","mappers","getTeaminfo","data","locationName","venue","division","conference","getPlayerDetails","getGoalies","players","franchise","roster","fullName","currentStats","careerStats","position","code","primaryPosition","getSummary","isGoalies","picture","gp","w","l","so","shutouts","svP","sa","shotsAgainst","pkSv","shortHandedSavePercentage","projections","getSkaters","SkaterView","playerId","playerid","showPlayerModal","Mappers","performanceFormater","avg","careerAvg","cell","stDev","headerSortingClasses","column","sortOrder","isLastSorting","colIndex","columns","dataField","text","formatter","row","sort","data-playerid","bind","lib_default","keyField","defaultSorted","order","GoalieView","goalies","isOver","svPerformanceFormater","gaaPerformanceFormater","Toggle","updatePlayers","showGoalies","styles","isGoalie","api","callApi","_callApi","asyncToGenerator","regenerator_default","mark","_callee","param","response","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","_x2","apply","arguments","PlayerModal","showModal","activePlayer","React","createContext","TEAM_API","Team","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","error","teamData","playerData","playerModal","fetchTeamDetails","newTeam","_this2","setState","toString","navigate","playerDetails","skater","_this3","TEAM_INFO","TEAM_SUMMARY","currentDetails","Api","then","catch","components_GoalieView","components_SkaterView","components_PlayerModal","updateModal","Provider","value","components_TeamDetails","components_Toggle","App","Team_Team","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dba39f77.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst RankChart = (props) => {\r\n    const rank = props.ranking && props.ranking.slice(0,-2);\r\n    const fillPercent = 100 - ((((rank-1)/31).toFixed(2))*100);\r\n    const fill = (rank > 0 && rank < 11) ? '#80c762' : (rank > 10 && rank < 20) ? '#ecc05b' : '#ec1c1c';\r\n    const style = {\r\n        width: `${fillPercent}%`,\r\n        height: '100%',\r\n        background: fill\r\n    };\r\n\r\n    return (\r\n        <div className=\"rank-chart\">\r\n            <div className=\"label\">{props.label}</div>\r\n            <div  className=\"chart\">\r\n                <span className=\"fill\" style={style}></span>\r\n                <span className=\"rank-tag\">{props.ranking}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RankChart;\r\n","import React from 'react';\r\n\r\nconst RankStat = (props) => {\r\n    const rank = props.ranking && props.ranking.slice(0,-2);\r\n    const fill = (rank > 0 && rank < 11) ? '#80c762' : (rank > 10 && rank < 20) ? '#ecc05b' : '#ec1c1c';\r\n    const style = { background: fill };\r\n    return (\r\n        <div className=\"rank-stat\">\r\n            <div className=\"label\">{props.label}</div>\r\n            <div className=\"stat\">\r\n                <span>{props.ranking}</span>\r\n                <span style={style}>{props.stat}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RankStat;\r\n","import React, { useState } from 'react';\r\n\r\nconst DropDown = (props) => {\r\n    //state\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggleDropdown = () => {\r\n        (isOpen === true) ? setIsOpen(false) : setIsOpen(true);\r\n    };\r\n\r\n    const updateTeam = (e) => {\r\n        const teamId = e.currentTarget.dataset.teamid;\r\n        props.updateTeam(teamId);\r\n    };\r\n\r\n\r\n    const teamList = props.list.map((team,index) => (\r\n        <li key={index} data-teamid={team.id} onClick={updateTeam}>{team.name}</li>\r\n    ));\r\n\r\n    let caretCss = (isOpen) ? 'caret open' : 'caret closed';\r\n    let listCss = (isOpen) ? 'dropdown-list open' : 'dropdown-list closed';\r\n    let labelCss =(props.label !== undefined && props.label.length < 8) ? 'label' : 'label large';\r\n\r\n    return (\r\n        <div className=\"dropdown\" onClick={toggleDropdown}>\r\n            <span className={labelCss}>{props.label}</span>\r\n            <span className={caretCss}></span>\r\n            <ul className={listCss}>\r\n                <li className=\"close\"><button onClick={toggleDropdown}>Close</button></li>\r\n                {teamList}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DropDown;\r\n","const teams = [\r\n    {name: 'Anaheim Ducks', id: 24},\r\n    {name: 'Arizona Coyotes', id: 53},\r\n    {name: 'Boston Bruins', id: 6},\r\n    {name: 'Buffalo Sabres', id: 7},\r\n    {name: 'Calgary Flames', id: 20},\r\n    {name: 'Carolina Hurricanes', id: 12},\r\n    {name: 'Chicago Blackhawks', id: 16},\r\n    {name: 'Colorado Avalanche', id: 21},\r\n    {name: 'Columbus Blue Jackets', id: 29},\r\n    {name: 'Dallas Stars', id: 25},\r\n    {name: 'Detroit Red Wings', id: 17},\r\n    {name: 'Edmonton Oilers', id: 22},\r\n    {name: 'Florida Panthers', id: 13},\r\n    {name: 'Los Angeles Kings', id: 26},\r\n    {name: 'Minnesota Wild', id: 30},\r\n    {name: 'Montreal Canadiens', id: 8},\r\n    {name: 'Nashville Predators', id: 18},\r\n    {name: 'New Jersey Devils', id: 1},\r\n    {name: 'New York Islanders', id: 2},\r\n    {name: 'New York Rangers', id: 3},\r\n    {name: 'Ottawa Senators', id: 9},\r\n    {name: 'Philadelphia Flyers', id: 4},\r\n    {name: 'Pittsburgh Penguins', id: 5},\r\n    {name: 'San Jose Sharks', id: 28},\r\n    {name: 'St. Louis Blues', id: 19},\r\n    {name: 'Tampa Bay Lightning', id: 14},\r\n    {name: 'Toronto Maple Leafs', id: 10},\r\n    {name: 'Vancouver Canucks', id: 23},\r\n    {name: 'Vegas Golden Knights', id: 54},\r\n    {name: 'Washington Capitals', id: 15},\r\n    {name: 'Winnipeg Jets', id: 52}\r\n];\r\n\r\nexport default teams;","import React, { useState } from 'react';\r\n\r\nconst Image = (props) => {\r\n    const [loaded, setLoaded] = useState(false);\r\n    const doneLoading = () => {\r\n        setLoaded(true);\r\n    }\r\n    let imgClass = (loaded) ? `${props.cssName} loaded` : props.cssName;\r\n\r\n    return (\r\n        <img className={imgClass} onLoad={doneLoading} alt=\"player\" src={`${props.url}${props.player}.${props.type}`}/>\r\n    );\r\n}\r\n\r\nexport default Image;\r\n","import React, { Component } from 'react';\r\nimport RankChart from '../components/ranking/RankChart';\r\nimport RankStat from '../components/ranking/RankStat';\r\nimport DropDown from '../components/DropDown';\r\nimport TeamIds from '../helpers/teamIds';\r\nimport {TeamContext} from '../pages/Team';\r\nimport Image from './Image';\r\n\r\nconst TEAMLOGO = 'https://www-league.nhlstatic.com/images/logos/teams-current-primary-dark/';\r\n\r\nclass TeamDetails extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <TeamContext.Consumer>\r\n            {(context) => {\r\n                const team = context.state.teamInfo;\r\n                const teamStats = team.stats;\r\n                let loadedCss = (context.state.isLoading) ? 'loading' : 'loaded';\r\n\r\n                return (\r\n                    <div className={`team-info ${loadedCss}`}>\r\n                        <div className=\"team-details\">\r\n                        <div className=\"details\">\r\n                            <Image cssName={'logo'} url={TEAMLOGO} player={this.props.teamId} type='svg'/>\r\n                            <div className=\"team-name\">\r\n                                    <span>{team.city}</span>\r\n                                    <span className=\"name\">\r\n                                        <DropDown label={team.teamName} list={TeamIds} updateTeam={context.updateTeam}/> \r\n                                    </span>\r\n                                    <div className=\"record\">\r\n                                        <span>{teamStats.pts} pts</span>\r\n                                        <span>{teamStats.wins}-{teamStats.losses}-{teamStats.ot}</span>\r\n                                    </div>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"rankings\">\r\n                                <RankChart label=\"Goals For\" ranking={team.ranks.goalsPerGame} />\r\n                                <RankChart label=\"Goals Against\" ranking={team.ranks.goalsAgainstPerGame} />\r\n                                <RankChart label=\"Powerplay\" ranking={team.ranks.powerPlayPercentage} />\r\n                                <RankChart label=\"Penalty Kill\" ranking={team.ranks.penaltyKillPercentage} />\r\n                            </div>\r\n                            <div className=\"rankings row\">\r\n                                <RankStat label=\"FaceOffs\" ranking={team.ranks.faceOffWinPercentage} stat={`${team.stats.faceOffWinPercentage}%`} />\r\n                                <RankStat label=\"Possession\" ranking={team.ranks.evGGARatio} stat={`${team.stats.evGGARatio}`} />\r\n                                <RankStat label=\"Shooting %\" ranking={team.ranks.shootingPctRank} stat={`${team.stats.shootingPctg}%`} />\r\n                                <RankStat label=\"Save %\" ranking={team.ranks.savePctRank} stat={`${team.stats.savePctg}%`} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }}\r\n        </TeamContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamDetails;\r\n","const mappers = {\r\n    getTeaminfo: (data) => {\r\n        return (\r\n            {\r\n                city: data.teams[0].locationName,\r\n                teamName: data.teams[0].teamName,\r\n                venue: data.teams[0].venue.name,\r\n                division: data.teams[0].division,\r\n                conference: data.teams[0].conference,\r\n                stats: data.teams[0].teamStats[0].splits[0].stat,\r\n                ranks: data.teams[0].teamStats[0].splits[1].stat,\r\n            }\r\n        );\r\n    },\r\n    getPlayerDetails: (data, details, getGoalies) => {\r\n        let players = [];\r\n        const rawPlayers = data.teams[0].franchise.roster.roster;\r\n\r\n        players = rawPlayers.map(player => {\r\n            return (\r\n                {\r\n                    name: player.person.fullName,\r\n                    details: player.person,\r\n                    currentStats:  getCurrentPlayerStats(player.person, details),\r\n                    careerStats: (player.position.code === 'G') ? getGoalieCareerAverages(player.person) : getCareerAverages(player.person)\r\n                }\r\n            );\r\n        });\r\n\r\n        if(getGoalies){\r\n            return players.filter(player => player.details.primaryPosition.code === 'G');\r\n        }else{\r\n            return players.filter(player => player.details.primaryPosition.code !== 'G');\r\n        }\r\n        \r\n    },\r\n    getSummary: (players, isGoalies) => {\r\n        return (isGoalies) ? getGoalies(players) : getSkaters(players);\r\n    }\r\n}\r\n\r\nfunction getSkaters(players) {\r\n    return players.map(player => {\r\n        return (\r\n            {\r\n                picture: player.details.id,\r\n                name: {name: player.name, id: player.details.id},\r\n                position: player.details.primaryPosition.code,\r\n                gp: player.currentStats.games,\r\n                goals: player.currentStats.goals,\r\n                assists: player.currentStats.assists,\r\n                points: player.currentStats.points,\r\n                plusMinus: player.currentStats.plusMinus,\r\n                projections: {\r\n                    goals: getProjection(player.currentStats.goals,player.currentStats.games),\r\n                    assists: getProjection(player.currentStats.assists,player.currentStats.games),\r\n                    points: getProjection(player.currentStats.points,player.currentStats.games)\r\n                },\r\n                averages: {\r\n                    goals: getAverage(player.currentStats.goals,player.currentStats.games),\r\n                    assists: getAverage(player.currentStats.assists,player.currentStats.games),\r\n                    points: getAverage(player.currentStats.points,player.currentStats.games)\r\n                },\r\n                careerAverages: {\r\n                    goals: player.careerStats.careerAverages.goals,\r\n                    assists: player.careerStats.careerAverages.assists,\r\n                    points: player.careerStats.careerAverages.points\r\n                },\r\n                trailingCareerAverages: {\r\n                    goals: player.careerStats.trailingCareerAverages.goals,\r\n                    assists: player.careerStats.trailingCareerAverages.assists,\r\n                    points: player.careerStats.trailingCareerAverages.points\r\n                },\r\n                standardDeviation: {\r\n                    goals: player.careerStats.standardDeviation.goals,\r\n                    assists: player.careerStats.standardDeviation.assists,\r\n                    points: player.careerStats.standardDeviation.points\r\n                }\r\n            }\r\n        );\r\n    });\r\n}\r\n\r\nfunction getGoalies(players) {\r\n    return players.map(player => {\r\n        return (\r\n            {\r\n                picture: player.details.id,\r\n                name: player.name,\r\n                position: player.details.primaryPosition.code,\r\n                gp: player.currentStats.games,\r\n                w: player.currentStats.wins,\r\n                l: player.currentStats.losses,\r\n                so: player.currentStats.shutouts,\r\n                gaa: player.currentStats.goalAgainstAverage,\r\n                svP:  player.currentStats.savePercentage,\r\n                sa: player.currentStats.shotsAgainst,\r\n                pkSv: Math.round((player.currentStats.shortHandedSavePercentage)*10)/1000,\r\n                trailingCareerAverages: {\r\n                    saveP: player.careerStats.trailingCareerAverages.saveP,\r\n                    gaa: player.careerStats.trailingCareerAverages.gaa\r\n                }\r\n            }\r\n        );\r\n    });\r\n}\r\n\r\nfunction getCurrentPlayerStats(person, details) {\r\n    const currentStatsDefault = {games: 0, goals: 0, assists: 0, points: 0, plusMinus: 0,};\r\n    const stats = person.stats[0].splits.filter((year) => {\r\n        return (\r\n            year.season === details.currentSeason && \r\n            year.team.id === parseInt(details.currentTeam) && \r\n            year.league.id === 133 //133 = NHL\r\n        );\r\n    });\r\n\r\n    return (stats[0] !== undefined) ? stats[0].stat : currentStatsDefault;\r\n}\r\n\r\nfunction getCareerAverages(person) {\r\n    const stats = person.stats[0].splits.filter((year) => {\r\n        return (\r\n            year.league.id === 133\r\n        );\r\n    });\r\n    let totalStats = {games: 0, goals: 0, assists: 0, points: 0 };\r\n    let trailingStats = {games: 0, goals: 0, assists: 0, points: 0, actuals: []};\r\n\r\n    // TODO: fast but there is a better way to do this\r\n    for (let i = 0, len = stats.length; i < len; i++) {\r\n        Object.assign(totalStats,{\r\n            games: totalStats.games + stats[i].stat.games,\r\n            goals: totalStats.goals + stats[i].stat.goals,\r\n            assists: totalStats.assists + stats[i].stat.assists,\r\n            points: totalStats.points + stats[i].stat.points\r\n        });\r\n    }\r\n    for (let x = Math.max((stats.length-4),0), y = stats.length - 1; x < y; x++) {\r\n        Object.assign(trailingStats,{\r\n            games: trailingStats.games + stats[x].stat.games,\r\n            goals: trailingStats.goals + stats[x].stat.goals,\r\n            assists: trailingStats.assists + stats[x].stat.assists,\r\n            points: trailingStats.points + stats[x].stat.points\r\n        });\r\n\r\n        trailingStats.actuals.push({\r\n            games: stats[x].stat.games,\r\n            goals: stats[x].stat.goals,\r\n            assists: stats[x].stat.assists,\r\n            points: stats[x].stat.points\r\n        });\r\n    }\r\n\r\n    let careerAverages = {\r\n        goals: getAverage(totalStats.goals,totalStats.games), \r\n        assists: getAverage(totalStats.assists,totalStats.games), \r\n        points: getAverage(totalStats.points,totalStats.games)\r\n    };\r\n\r\n    let trailingCareerAverages = {\r\n        goals: getAverage(trailingStats.goals,trailingStats.games), \r\n        assists: getAverage(trailingStats.assists,trailingStats.games), \r\n        points: getAverage(trailingStats.points,trailingStats.games)\r\n    };\r\n    let standardDeviation = getStandardDeviation(trailingStats,trailingCareerAverages);\r\n\r\n    return {totalStats, careerAverages, trailingCareerAverages, standardDeviation};\r\n}\r\n\r\nfunction getGoalieCareerAverages(person) {\r\n    const stats = person.stats[0].splits.filter((year) => {\r\n        return (\r\n            year.league.id === 133 && year.stat.games > 10\r\n        );\r\n    });\r\n    const trailingYears = (stats.length-1 > 3) ? 4 : stats.length;\r\n\r\n    let totalStats = {games:0, saveP: 0, gaa:0};\r\n    let trailingStats = {games:0, saveP: 0, gaa:0};\r\n\r\n    for (let i = 0, len = stats.length; i < len; i++) {\r\n        Object.assign(totalStats,{\r\n            games: totalStats.games + stats[i].stat.games,\r\n            saveP: totalStats.saveP + stats[i].stat.savePercentage,\r\n            gaa: totalStats.gaa + stats[i].stat.goalAgainstAverage\r\n        });\r\n    }\r\n    for (let x = Math.max((stats.length-1)-3,0), y = stats.length; x < y; x++) {\r\n        Object.assign(trailingStats,{\r\n            games: trailingStats.games + stats[x].stat.games,\r\n            saveP: trailingStats.saveP + stats[x].stat.savePercentage,\r\n            gaa: trailingStats.gaa + stats[x].stat.goalAgainstAverage\r\n        });\r\n    }\r\n    let trailingCareerAverages = {\r\n        saveP: Math.round((trailingStats.saveP/trailingYears)*1000)/1000, \r\n        gaa: Math.round((trailingStats.gaa/trailingYears)*1000)/1000\r\n    };\r\n    return {totalStats, trailingCareerAverages};\r\n}\r\n\r\nfunction getStandardDeviation(totals,averages){\r\n    let standardDeviation = {games:0, goals:0, assists: 0, points:0};\r\n    const meanSquared = totals.actuals.map((year) => {\r\n        return ({\r\n            games: year.games,\r\n            goals: Math.pow((getAverage(year.goals,year.games) - averages.goals),2),\r\n            assists: Math.pow((getAverage(year.assists,year.games)  - averages.assists),2),\r\n            points: Math.pow((getAverage(year.points,year.games)  - averages.points),2)\r\n        });\r\n    });\r\n    for (let i = 0, len = meanSquared.length; i < len; i++) {\r\n        Object.assign(standardDeviation,{\r\n            games: Math.round(Math.sqrt((standardDeviation.games + meanSquared[i].games)/meanSquared.length)*100)/100,\r\n            goals: Math.round(Math.sqrt((standardDeviation.goals + meanSquared[i].goals)/meanSquared.length)*100)/100,\r\n            assists: Math.round(Math.sqrt((standardDeviation.assists + meanSquared[i].assists)/meanSquared.length)*100)/100,\r\n            points: Math.round(Math.sqrt((standardDeviation.points + meanSquared[i].points)/meanSquared.length)*100)/100\r\n        });\r\n    }\r\n    return standardDeviation;\r\n}\r\n\r\nfunction getAverage(stat,games) {\r\n    //this check handles a werid case where they track players that didnt play in a regular season game\r\n    const Avg = (stat !== 0 && games !== 0) ? Math.round((stat/games)*100)/100 : 0;\r\n    return Avg;\r\n}\r\n\r\nfunction getProjection(stat,games) {\r\n    stat = (stat !== undefined) ? stat : 0;\r\n\r\n    //this check handles a werid case where they track players that didnt play in a regular season game\r\n    return (stat !== 0 && games !== 0) ? Math.round((stat/games) * 82) : 0;\r\n}\r\n\r\nexport default mappers;","import React, { Component } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport {TeamContext} from '../pages/Team';\r\nimport Mappers from '../helpers/mappers';\r\nimport Image from './Image';\r\n\r\nconst PLAYERIMAGE = 'https://nhl.bamcontent.com/images/headshots/current/60x60/';\r\n\r\nclass SkaterView extends Component {\r\n\r\n  showPlayerModal(e) {\r\n    const playerId = e.currentTarget.dataset.playerid;\r\n    this.props.showPlayerModal(playerId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TeamContext.Consumer>\r\n        {(context) => {\r\n          const players = Mappers.getSummary(context.state.players, false);\r\n\r\n          const avatarFormater = (cell,row) => {\r\n              return (\r\n                  <Image cssName={'player'} url={PLAYERIMAGE} player={cell} type='jpg'/>\r\n              );\r\n          };\r\n          const playerFormater = (cell,row) => {\r\n            return (\r\n                <button className=\"player-name\" data-playerid={cell.id} onClick={this.showPlayerModal.bind(this)}>{cell.name}</button>\r\n            );\r\n        };\r\n          const performanceFormater = (avg,careerAvg,cell,stDev) => {\r\n            //TODO consider sing the Standard deviation thats being passed in\r\n            const buffer = .0244; //give them a 2pt/g/a buffer\r\n            let style = '';\r\n\r\n            if(avg <= (careerAvg - buffer)){\r\n              style = 'poor'\r\n            }else if (avg >= (careerAvg + buffer)) {\r\n              style = 'good'\r\n            }\r\n            return <span className={style}>{cell}</span>\r\n          };\r\n          const goalsPerformanceFormater = (cell,row) => performanceFormater(row.averages.goals,row.trailingCareerAverages.goals,cell,row.standardDeviation.goals);\r\n          const astsPerformanceFormater = (cell,row) => performanceFormater(row.averages.assists,row.trailingCareerAverages.assists,cell,row.standardDeviation.assists);\r\n          const ptsPerformanceFormater = (cell,row) => performanceFormater(row.averages.points,row.trailingCareerAverages.points,cell,row.standardDeviation.points);\r\n          const defaultSorted = [{\r\n            dataField: 'points',\r\n            order: 'desc'\r\n          }];\r\n          const headerSortingClasses = (column, sortOrder, isLastSorting, colIndex) => (\r\n            sortOrder === 'asc' ? 'sort-asc' : 'sort-desc'\r\n          );\r\n            \r\n      \r\n          const columns = [\r\n              { dataField: 'picture', text: '', formatter: avatarFormater }, \r\n              { dataField: 'name', text: 'Player', sort: true, headerSortingClasses, formatter: playerFormater },\r\n              { dataField: 'position', text: 'Pos', sort: true, headerSortingClasses },\r\n              { dataField: 'gp', text: 'GP', sort: true, headerSortingClasses },\r\n              { dataField: 'goals', text: 'G', sort: true, headerSortingClasses, formatter: goalsPerformanceFormater },\r\n              { dataField: 'assists', text: 'A', sort: true, headerSortingClasses, formatter: astsPerformanceFormater },\r\n              { dataField: 'points', text: 'Pts', sort: true, headerSortingClasses, formatter: ptsPerformanceFormater },\r\n              { dataField: 'plusMinus', text: '+/-', sort: true, headerSortingClasses },\r\n              { dataField: 'projections.goals', text: 'Pj.G', sort: true, headerSortingClasses },\r\n              { dataField: 'projections.assists', text: 'Pj.A', sort: true, headerSortingClasses },\r\n              { dataField: 'projections.points', text: 'Pj.Pts', sort: true, headerSortingClasses },\r\n              { dataField: 'averages.points', text: 'Pts/G.',sort: true, headerSortingClasses },\r\n              { dataField: 'careerAverages.points', text: 'Career',sort: true, headerSortingClasses }\r\n          ];\r\n          \r\n          return (\r\n            <div className=\"team-content\">\r\n                <div className='roster-stats'>\r\n                    <BootstrapTable keyField='picture' data={ players } columns={ columns } defaultSorted={ defaultSorted }/>\r\n                    <div className=\"legend\">\r\n                      <div><span className=\"good\"></span> Outperforming recent pace (last 3 years)</div>\r\n                      <div><span className=\"poor\"></span> Underperforming recent pace (last 3 years)</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </TeamContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkaterView;\r\n","import React, { Component } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport {TeamContext} from '../pages/Team';\r\nimport Mappers from '../helpers/mappers';\r\nimport Image from './Image';\r\n\r\nconst PLAYERIMAGE = 'https://nhl.bamcontent.com/images/headshots/current/60x60/';\r\n\r\nclass GoalieView extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <TeamContext.Consumer>\r\n        {(context) => {\r\n          const players = Mappers.getSummary(context.state.goalies, true);\r\n          const avatarFormater = (cell,row) => {\r\n              return (\r\n                <Image cssName={'player'} url={PLAYERIMAGE} player={cell} type='jpg'/>\r\n              );\r\n          };\r\n          const gaaPerformanceFormater = (avg,careerAvg,cell,isOver) => {\r\n            const buffer = .1;\r\n            let style = '';\r\n            if(avg < (careerAvg - buffer)){\r\n              style = 'good'\r\n            }else if (avg > (careerAvg + buffer)) {\r\n              style = 'poor'\r\n            }\r\n            return <span className={style}>{cell}</span>;\r\n          };\r\n          const svPerformanceFormater = (avg,careerAvg,cell,isOver) => {\r\n            const buffer = .01;\r\n            let style = '';\r\n            if(avg > (careerAvg + buffer)){\r\n              style = 'good'\r\n            }else if (avg < (careerAvg - buffer)) {\r\n              style = 'poor'\r\n            }\r\n            return <span className={style}>{cell}</span>;\r\n          };\r\n          const gaaFormater = (cell,row) => gaaPerformanceFormater(row.gaa,row.trailingCareerAverages.gaa,cell);\r\n          const svFormater = (cell,row) => svPerformanceFormater(row.svP,row.trailingCareerAverages.saveP,cell);\r\n          const defaultSorted = [{\r\n              dataField: 'gp',\r\n              order: 'desc'\r\n            }];\r\n            const headerSortingClasses = (column, sortOrder, isLastSorting, colIndex) => (\r\n              sortOrder === 'asc' ? 'sort-asc' : 'sort-desc'\r\n            );\r\n            \r\n      \r\n          const columns = [\r\n              { dataField: 'picture', text: '', formatter: avatarFormater }, \r\n              { dataField: 'name', text: 'Player', sort: true, headerSortingClasses },\r\n              { dataField: 'position', text: 'Pos', sort: true, headerSortingClasses },\r\n              { dataField: 'gp', text: 'GP', sort: true, headerSortingClasses },\r\n              { dataField: 'w', text: 'W', sort: true, headerSortingClasses },\r\n              { dataField: 'l', text: 'L', sort: true, headerSortingClasses },\r\n              { dataField: 'so', text: 'SO', sort: true, headerSortingClasses },\r\n              { dataField: 'svP', text: 'SV%', sort: true, headerSortingClasses, formatter: svFormater },\r\n              { dataField: 'gaa', text: 'GAA', sort: true, headerSortingClasses, formatter: gaaFormater },\r\n              { dataField: 'sa', text: 'SA', sort: true, headerSortingClasses },\r\n              { dataField: 'pkSv', text: 'PKSV%', sort: true, headerSortingClasses }\r\n          ];\r\n          \r\n          return (\r\n            <div className=\"team-content\">\r\n                <div className='roster-stats goalie'>\r\n                    <BootstrapTable keyField='picture' data={ players } columns={ columns } defaultSorted={ defaultSorted }/>\r\n                    <div className=\"legend\">\r\n                      <div><span className=\"good\"></span> Outperforming recent pace (last 3 years)</div>\r\n                      <div><span className=\"poor\"></span> Underperforming recent pace (last 3 years)</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </TeamContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoalieView;\r\n","import React from 'react';\r\nimport {TeamContext} from '../pages/Team';\r\n\r\nconst Toggle = (props) => {\r\n    const updatePlayers = (showGoalies) => {\r\n        props.updatePlayers(showGoalies);\r\n    };\r\n\r\n    return (\r\n        <TeamContext.Consumer>\r\n            {(context) => {\r\n                const showGoalies = context.state.showGoalies;\r\n                const styles = (isGoalie) => {\r\n                    return (showGoalies === isGoalie) ? 'active' : '';\r\n                };\r\n\r\n                return (\r\n                    <div className=\"players-toggle\">\r\n                        <div className=\"toggle\">\r\n                            <button className={styles(false)} onClick={updatePlayers.bind(this,false)}>Skaters</button>\r\n                            <button className={styles(true)} onClick={updatePlayers.bind(this,true)}>Goalies</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }}\r\n        </TeamContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default Toggle;\r\n","const api = {\r\n    callApi: async function(api,param) {\r\n        let response = await fetch(api + param);\r\n        return await response.json();\r\n    }\r\n}\r\n\r\nexport default api;","import React, { Component } from 'react';\r\nimport {TeamContext} from '../pages/Team';\r\n\r\nclass PlayerModal extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <TeamContext.Consumer>\r\n        {(context) => {\r\n            const closeModal = () => {\r\n                this.props.showModal(false);\r\n            };\r\n\r\n            return (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-bkg\" onClick={closeModal}></div>\r\n                    <div className=\"modal-content\">\r\n                        {this.props.activePlayer.details.fullName}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }}\r\n        </TeamContext.Consumer>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default PlayerModal;","import React, { Component } from 'react';\r\nimport TeamDetails from '../components/TeamDetails';\r\nimport SkaterView from '../components/SkaterView';\r\nimport GoalieView from '../components/GoalieView';\r\nimport Toggle from '../components/Toggle';\r\nimport Api from '../helpers/api';\r\nimport Mappers from '../helpers/mappers';\r\nimport {navigate} from 'hookrouter';\r\nimport PlayerModal from '../components/PlayerModal';\r\n\r\nconst TeamContext = React.createContext(null);\r\nconst TEAM_API = 'https://statsapi.web.nhl.com/api/v1/teams/';\r\n\r\nclass Team extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      error: null,\r\n      currentTeam: (this.props.currentTeam === undefined) ? '19' : this.props.currentTeam,\r\n      currentSeason: '20192020',\r\n      teamData:null,\r\n      playerData:null,\r\n      players: [],\r\n      goalies: [],\r\n      teamInfo: {\r\n          stats: {},\r\n          ranks: { ranking: {} }\r\n      },\r\n      showGoalies: false,\r\n      playerModal: {\r\n        isOpen: false,\r\n        activePlayer: {}\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchTeamDetails();\r\n  }\r\n\r\n  updateTeam(newTeam) {\r\n    this.setState({currentTeam: newTeam.toString()}, ()=> {\r\n      navigate(`/team/${newTeam}`);\r\n      this.fetchTeamDetails();\r\n    });\r\n  }\r\n\r\n  updatePlayers(showGoalies) {\r\n    this.setState({showGoalies: showGoalies});\r\n  }\r\n\r\n  showPlayerModal(player) {\r\n    const playerDetails = this.state.players.filter(skater => skater.details.id.toString() === player.toString())[0];\r\n    this.setState({\r\n      playerModal: {\r\n        isOpen: true,\r\n        activePlayer: playerDetails\r\n      }\r\n    });\r\n  }\r\n\r\n  updateModal(isOpen) {\r\n    this.setState({\r\n      playerModal: {\r\n        isOpen,\r\n        activePlayer:{}\r\n      }\r\n    });\r\n  }\r\n\r\n  fetchTeamDetails() {\r\n    const TEAM_INFO = `${this.state.currentTeam}?expand=team.stats`;\r\n    const TEAM_SUMMARY = `${this.state.currentTeam}?hydrate=franchise(roster(season=${this.state.currentSeason},person(name,stats(splits=[yearByYear]))))`;\r\n    const currentDetails = {\r\n      currentTeam: this.state.currentTeam, \r\n      currentSeason: this.state.currentSeason\r\n    };\r\n    \r\n    this.setState({isLoading: true});\r\n\r\n    Api.callApi(TEAM_API,TEAM_INFO)\r\n      .then(data => this.setState({ teamData: data, teamInfo: Mappers.getTeaminfo(data), isLoading: false}))\r\n      .catch(error => this.setState({error, isLoading: false}));\r\n\r\n    Api.callApi(TEAM_API,TEAM_SUMMARY)\r\n      .then(data => this.setState({ \r\n        playerData: data, \r\n        players: Mappers.getPlayerDetails(data,currentDetails,false),\r\n        goalies: Mappers.getPlayerDetails(data,currentDetails,true),\r\n        isLoading: false }))\r\n      .catch(error => this.setState({error, isLoading: false}))\r\n  }\r\n\r\n  render() {\r\n      const players = (this.state.showGoalies) ? \r\n        <GoalieView teamId={this.state.currentTeam} /> : \r\n        <SkaterView teamId={this.state.currentTeam} showPlayerModal={this.showPlayerModal.bind(this)}/>;\r\n\r\n      const playerModal = (this.state.playerModal.isOpen) && <PlayerModal showModal={this.updateModal.bind(this)} activePlayer={this.state.playerModal.activePlayer}/>\r\n\r\n      return (\r\n        <TeamContext.Provider value={{state: this.state,updateTeam: this.updateTeam.bind(this)}}>\r\n            <div className=\"team\">\r\n              <TeamDetails teamId={this.state.currentTeam} />\r\n              <Toggle updatePlayers={this.updatePlayers.bind(this)}/>\r\n              {players}\r\n              {playerModal}\r\n            </div>\r\n        </TeamContext.Provider>\r\n      );\r\n  }\r\n}\r\n\r\nexport {Team, TeamContext};\r\n","import React from 'react';\r\n//import Home from './pages/Home';\r\nimport {Team} from './pages/Team';\r\nimport {useRoutes} from 'hookrouter';\r\n\r\nconst routes = {\r\n  '/': () => <Team />,\r\n  '/statjunkie': () => <Team />,\r\n  '/team': () => <Team />,\r\n  '/team/:id': ({id}) => <Team currentTeam={id}/>,\r\n};\r\n\r\nconst App = () => {\r\n  return <Team />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}